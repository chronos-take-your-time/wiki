{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"In\u00edcio","text":"<p>Bem-vindo \u00e0 wiki do Chronos, projeto de TCC desenvolvido na Escola T\u00e9cnica Estadual Professora Anna de Oliveira Ferraz. O Chronos \u00e9 uma ferramenta para cria\u00e7\u00e3o de quadros e diagramas, com suporte a colabora\u00e7\u00e3o em tempo real e de c\u00f3digo aberto, pensada para auxiliar na organiza\u00e7\u00e3o criativa de ideias.</p> <p>Confira nossa p\u00e1gina no GitHub</p>"},{"location":"equipe/","title":"Equipe","text":"<p>No ano de 2025 estamos concluindo nosso curso de Desenvolvimento de Sistemas integrado ao Ensino M\u00e9dio na Escola T\u00e9cnica Estadual Professora Anna de Oliveira Ferraz, este \u00e9 o nosso TCC (Trabalho de Conclus\u00e3o de Curso).</p>"},{"location":"equipe/#joaquim-trovatti","title":"Joaquim Trovatti","text":"<p>Instagram: @jobisqueen GitHub: @Jobisquim </p>"},{"location":"equipe/#luis-henrique","title":"Luis Henrique","text":"<p>Instagram: @l.hso_ GitHub: @L-hso </p>"},{"location":"equipe/#pedro-henrique","title":"Pedro Henrique","text":"<p>Instagram: @pedr0808 GitHub: @nukhes </p>"},{"location":"introducao/","title":"Introdu\u00e7\u00e3o","text":"<p>Chronos \u00e9 um software de colabora\u00e7\u00e3o no fluxo criativo, sendo uma ferramenta que possibilita a cria\u00e7\u00e3o de quadros interativos com conte\u00fado textual e gr\u00e1fico de desenho com aux\u00edlio de intelig\u00eancia artificial. Plataformas como Notion, Miro e Obsidian oferecem funcionalidades semelhantes, mas o Chronos se diferencia ao priorizar uma experi\u00eancia mais simples e fluida. Com uma interface intuitiva e centrada na tarefa, ele acompanha a tend\u00eancia da Intelig\u00eancia Artificial para ajudar a organiza\u00e7\u00e3o de ideias, garantindo que os usu\u00e1rios possam focar no que realmente importa: transformar pensamentos em projetos de forma \u00e1gil e eficiente.</p>"},{"location":"introducao/#projeto-no-figma","title":"Projeto no Figma","text":"<p>Temos um projeto no Figma que organiza e define a estrutura do nosso design de experi\u00eancia do usu\u00e1rio (UX), oferecendo uma vis\u00e3o intuitiva da aplica\u00e7\u00e3o. O Figma \u00e9 uma ferramenta de design ideal para criar interfaces de usu\u00e1rio (UI) e prot\u00f3tipos interativos,</p>"},{"location":"arquitetura/cliente/","title":"Cliente Desktop","text":"<p>A aplica\u00e7\u00e3o cliente \u00e9 um aplicativo desktop multiplataforma constru\u00eddo com Tauri, utilizando a integra\u00e7\u00e3o entre tecnologias web e sistemas nativos.</p> Tecnologia Fun\u00e7\u00e3o Rust Base para a aplica\u00e7\u00e3o desktop via Tauri Tauri Wrapper nativo leve para empacotar o frontend em Rust JavaScript L\u00f3gica da aplica\u00e7\u00e3o e integra\u00e7\u00e3o entre m\u00f3dulos React Interface do usu\u00e1rio com componentes reativos socket.io Comunica\u00e7\u00e3o em tempo real com o servidor Tailwind Framework utilit\u00e1rio para estiliza\u00e7\u00e3o com CSS"},{"location":"arquitetura/cliente/#estrutura-da-aplicacao","title":"Estrutura da Aplica\u00e7\u00e3o","text":"<p>TODO: completar esta se\u00e7\u00e3o com uma explana\u00e7\u00e3o de como a aplica\u00e7\u00e3o vai ser estruturada no n\u00edvel de c\u00f3digo e como vai se comunicar com o server.</p>"},{"location":"arquitetura/servidor/autentica%C3%A7%C3%A3o-e-contas/","title":"Autentica\u00e7\u00e3o e sistema de contas","text":""},{"location":"arquitetura/servidor/autentica%C3%A7%C3%A3o-e-contas/#infraestrutura","title":"Infraestrutura","text":"<p>A cria\u00e7\u00e3o e autentica\u00e7\u00e3o de usu\u00e1rios no Chronos \u00e9 gerenciada pelo Clerk, ele \u00e9 respons\u00e1vel por todo o processo de login, registro e controle de sess\u00f5es. O fluxo de cria\u00e7\u00e3o ocorre com o usu\u00e1rio acessando a interface de cadastro (email/senha ou OAuth com Google). Algumas das atribui\u00e7\u00f5es ao Clerk s\u00e3o:</p> <ul> <li>Dados pessoais: id, first_name, last_name, email_addresses, username, image_url</li> <li>M\u00e9todos de login (senha, OAuth, magic link, etc.)</li> <li>Organiza\u00e7\u00f5es (times) e seus n\u00edveis de provil\u00e9gio</li> <li>Sess\u00e3o</li> </ul>"},{"location":"arquitetura/servidor/autentica%C3%A7%C3%A3o-e-contas/#niveis-de-privilegios","title":"N\u00edveis de Privil\u00e9gios","text":"<p>Para gerenciar os n\u00edveis de privil\u00e9gio e permiss\u00f5es nas equipes do Chronos cada usu\u00e1rio tem um n\u00edvel de privil\u00e9gio, determinado pelo Owner da equipe, este \u00e9 um tipo especial de usu\u00e1rio determinado no momento de cria\u00e7\u00e3o da equipe, ele \u00e9 o \u00fanico que pode apagar a equipe e modificar o n\u00edvel de qualquer outro membro exceto a si mesmo, cada n\u00edvel ser\u00e1 salvo no banco de dados como um n\u00famero inteiro.</p> <ul> <li>Owner (3): Todos os poderes de modera\u00e7\u00e3o e controle geral das configura\u00e7\u00f5es da equipe e de todos os membros</li> <li>Moderator (2): Herda os direitos de um editor, por\u00e9m pode modificar a permiss\u00e3o dos outros membros n\u00e3o moderadores, e tem acesso a configura\u00e7\u00f5es do quadro.</li> <li>Editor (1): Herda as permiss\u00f5es padr\u00f5es, com o privil\u00e9gio de poder modificar o quadro no seu conte\u00fado.</li> <li>Default (0): Permiss\u00f5es padr\u00f5es para a leitura do conte\u00fado do quadro, n\u00e3o podendo realizar nenhuma opera\u00e7\u00e3o.</li> </ul>"},{"location":"arquitetura/servidor/colabora%C3%A7%C3%A3o-em-tempo-real/","title":"Colabora\u00e7\u00e3o em tempo real","text":"<p>O Chronos usa tl-draw/sync como biblioteca para a infraestrutura de conex\u00e3o em tempo-real dos quadros, ele \u00e9 baseado em WebSocket e integrado no back-end.</p> <p>O protocolo WebSocket estabelece uma conex\u00e3o persistente. Uma vez aberta, essa conex\u00e3o permite envio e recebimento de dados em tempo real, dos dois lados, sem a necessidade de abrir novas conex\u00f5es o tempo todo.</p>"},{"location":"arquitetura/servidor/dados/","title":"Armazenamento dos quadros","text":"<p>Com os identificadores de usu\u00e1rio e organiza\u00e7\u00f5es (times) do Clerk o armazenamento dos quadros ser\u00e1 estruturado em diret\u00f3rios dentro de um volume Docker, os times s\u00e3o armazenados em <code>\\teams\\id</code>, onde <code>id</code> \u00e9 um diret\u00f3rio nomeado com base no id do time, dentro deles ser\u00e3o criados os quadros, que essencialmente s\u00e3o arquivos JSON estruturados.</p> <pre><code>\\teams\n\u251c\u2500\u2500 123/\n\u2502   \u251c\u2500\u2500 1.json\n\u2502   \u2514\u2500\u2500 2.json\n\u2502\n\u2514\u2500\u2500 456/\n    \u251c\u2500\u2500 1.json\n    \u251c\u2500\u2500 2.json\n    \u2514\u2500\u2500 3.json\n</code></pre>"},{"location":"arquitetura/servidor/fluxo-do-servidor/","title":"Fluxo do servidor e organiza\u00e7\u00e3o","text":""},{"location":"arquitetura/servidor/fluxo-do-servidor/#comunicacao-entre-servidor-e-cliente","title":"Comunica\u00e7\u00e3o entre servidor e cliente","text":"<p>Para que o servidor possa suportar a intera\u00e7\u00e3o em tempo real e ao mesmo tempo o modelo de requisi\u00e7\u00e3o-resposta ser\u00e3o utilizados dois protocolos: websocket e TCP/IP.</p>"},{"location":"arquitetura/servidor/fluxo-do-servidor/#rotas","title":"Rotas","text":"<p>Os dados ter\u00e3o seu fluxo baseado no seguinte sistema de rotas, do qual permitir\u00e1 um bom gerenciamento e distribui\u00e7\u00e3o deles tanto no servidor quanto no cliente. </p> <p>As rotas ter\u00e3o o acesso mediado conforme determinado na se\u00e7\u00e3o Autentica\u00e7\u00e3o de cria\u00e7\u00e3o de contas e seguran\u00e7a.</p> <p></p>"},{"location":"arquitetura/servidor/stack/","title":"Servidor","text":"<p>O servidor \u00e9 constru\u00eddo com foco em leveza e reprodutibilidade, utilizando containers orquestrados via docker-compose para garantir o mesmo comportamento em qualquer ambiente Linux, al\u00e9m de volumes para persist\u00eancia de dados.</p> Tecnologia Fun\u00e7\u00e3o Docker Orquestra\u00e7\u00e3o de containers Node.js Backend da aplica\u00e7\u00e3o e gerenciamento de l\u00f3gica Tldraw Biblioteca para a constru\u00e7\u00e3o dos quadros Clerk Solu\u00e7\u00e3o de autentica\u00e7\u00e3o e gerenciamento de usu\u00e1rios."},{"location":"desenvolvimento/convencoes/","title":"Conven\u00e7\u00f5es","text":"<p>Aqui ser\u00e3o definidas as diretrizes que regem as boas pr\u00e1ticas de desenvolvimento do projeto, ao longo do tempo mais t\u00f3picos ser\u00e3o adicionados ou editados, o que est\u00e1 aqui deve ser seguido por todos que trabalharem no c\u00f3digo para manter um padr\u00e3o de qualidade.</p>"},{"location":"desenvolvimento/convencoes/#conventional-commits","title":"Conventional Commits","text":"<p>Este \u00e9 um conjunto simples de regras para a cria\u00e7\u00e3o de um hist\u00f3rico de commits expl\u00edcito, descrevendo os recursos, corre\u00e7\u00f5es e altera\u00e7\u00f5es significativas feitas em mensagens de commit. Os commits do projeto devem ser feitos em Portugu\u00eas Brasileiro, n\u00e3o precisando conter acentua\u00e7\u00e3o.</p>"},{"location":"desenvolvimento/convencoes/#exemplos","title":"Exemplos:","text":"<ul> <li><code>feat(quadro): adicionar suporte a desenho</code></li> <li><code>fix(ia): corrigir resposta vazia</code></li> <li><code>docs(wiki): atualizar guia de uso</code></li> <li><code>refactor(socket): melhorar performance</code></li> </ul>"},{"location":"desenvolvimento/convencoes/#tipos-mais-usados","title":"Tipos mais usados:","text":"<ul> <li><code>feat</code>: nova funcionalidade</li> <li><code>fix</code>: corre\u00e7\u00e3o de bug</li> <li><code>docs</code>: mudan\u00e7as na documenta\u00e7\u00e3o</li> <li><code>style</code>: formata\u00e7\u00e3o, sem mudan\u00e7a de l\u00f3gica</li> <li><code>refactor</code>: refatora\u00e7\u00e3o sem altera\u00e7\u00e3o de funcionalidade</li> <li><code>test</code>: testes automatizados</li> <li><code>chore</code>: tarefas que n\u00e3o afetam o c\u00f3digo de produ\u00e7\u00e3o</li> </ul> <p>Documeta\u00e7\u00e3o do Conventional Commits</p>"}]}